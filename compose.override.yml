services:
  zrok-enable:
    user: "2171:2171"
  zrok-share:
    user: "2171:2171"
    restart: no
    environment:
      # this is a dummy value because zrok reserve public requires a backend mode and target, though they're not used
      # when using the SDK
      ZROK_TARGET: http://example.com
      ZROK_UNIQUE_NAME: radial
      # tell zrok-share.bash to only reserve, but don't run the share, because we're using the SDK to provide the
      # share's bind point
      ZROK_SHARE_RESERVED: "false"
      # authN options
      ZROK_OAUTH_PROVIDER:  # google, github
      ZROK_OATH_EMAILS:     # allow space-separated list of OAuth email addresses or @domain.tld
      ZROK_BASIC_AUTH:      # username:password, mutually-exclusive with ZROK_OAUTH_PROVIDER
  django-init:
    image: busybox
    # matches uid:gid of "nobody" in zrok container image
    command: chown -Rc 2171:2171 /mnt/
    user: root
    volumes:
      - zrok_env:/mnt
  django:
    build:
      context: .
      args:
        - PUID=2171
        - PGID=2171
    user: "2171:2171"
    depends_on:
      django-init:
        condition: service_completed_successfully
    ports: []  # there are no listening ports because the app is hosted by OpenZiti
    environment:
      DJANGO_DEBUG: "False"  # unset or set to "True" to enable debug mode
      DJANGO_SECRET_KEY:
    restart: unless-stopped
    # wait for zrok to reserve a frontend endpoint before starting django
    command: python server.py /mnt
    volumes:
      - zrok_env:/mnt
  zrok-test:
    profiles: ["test"]
